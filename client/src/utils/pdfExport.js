import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

export const exportBriefAsPDF = async (brief) => {
  try {
    // Create a temporary div to render the content
    const tempDiv = document.createElement('div');
    tempDiv.style.position = 'absolute';
    tempDiv.style.left = '-9999px';
    tempDiv.style.top = '0';
    tempDiv.style.width = '800px';
    tempDiv.style.backgroundColor = 'white';
    tempDiv.style.padding = '40px';
    tempDiv.style.fontFamily = 'Arial, sans-serif';
    tempDiv.style.color = '#333';
    tempDiv.style.lineHeight = '1.6';
    
    // Generate the HTML content
    tempDiv.innerHTML = `
      <div style="text-align: center; margin-bottom: 40px;">
        <h1 style="color: #2563eb; font-size: 32px; margin-bottom: 10px; font-weight: bold;">
          PodBrief
        </h1>
        <p style="color: #6b7280; font-size: 16px; margin: 0;">
          Professional Podcast Interview Brief
        </p>
      </div>

      <div style="margin-bottom: 30px; padding: 20px; background-color: #f8fafc; border-radius: 8px; border-left: 4px solid #2563eb;">
        <h2 style="color: #1f2937; font-size: 24px; margin-bottom: 15px; font-weight: bold;">
          Guest Information
        </h2>
        <p style="font-size: 18px; font-weight: bold; color: #2563eb; margin-bottom: 10px;">
          ${brief.guestName}
        </p>
        ${brief.guestTopic ? `<p style="color: #6b7280; margin-bottom: 5px;"><strong>Topic:</strong> ${brief.guestTopic}</p>` : ''}
        ${brief.guestLink ? `<p style="color: #6b7280; margin-bottom: 5px;"><strong>Website:</strong> ${brief.guestLink}</p>` : ''}
        <p style="color: #6b7280; font-size: 14px; margin: 0;">
          <strong>Generated:</strong> ${new Date(brief.createdAt).toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          })}
        </p>
      </div>

      <div style="margin-bottom: 30px;">
        <h2 style="color: #1f2937; font-size: 24px; margin-bottom: 15px; font-weight: bold; border-bottom: 2px solid #e5e7eb; padding-bottom: 10px;">
          Professional Bio
        </h2>
        <p style="font-size: 16px; line-height: 1.8; color: #374151; margin: 0;">
          ${brief.bio}
        </p>
      </div>

      <div style="margin-bottom: 30px;">
        <h2 style="color: #1f2937; font-size: 24px; margin-bottom: 15px; font-weight: bold; border-bottom: 2px solid #e5e7eb; padding-bottom: 10px;">
          Interview Questions
        </h2>
        <div style="margin-left: 20px;">
          ${brief.questions.map((question, index) => `
            <div style="margin-bottom: 15px;">
              <p style="font-size: 16px; line-height: 1.6; color: #374151; margin: 0;">
                <span style="font-weight: bold; color: #2563eb;">${index + 1}.</span> ${question}
              </p>
            </div>
          `).join('')}
        </div>
      </div>

      <div style="margin-bottom: 30px;">
        <h2 style="color: #1f2937; font-size: 24px; margin-bottom: 15px; font-weight: bold; border-bottom: 2px solid #e5e7eb; padding-bottom: 10px;">
          Intro Script (~30 seconds)
        </h2>
        <div style="padding: 20px; background-color: #f0f9ff; border-radius: 8px; border-left: 4px solid #0ea5e9;">
          <p style="font-size: 16px; line-height: 1.8; color: #374151; margin: 0; font-style: italic;">
            "${brief.intro}"
          </p>
        </div>
      </div>

      <div style="margin-bottom: 30px;">
        <h2 style="color: #1f2937; font-size: 24px; margin-bottom: 15px; font-weight: bold; border-bottom: 2px solid #e5e7eb; padding-bottom: 10px;">
          Outro Script (~15 seconds)
        </h2>
        <div style="padding: 20px; background-color: #fef3c7; border-radius: 8px; border-left: 4px solid #f59e0b;">
          <p style="font-size: 16px; line-height: 1.8; color: #374151; margin: 0; font-style: italic;">
            "${brief.outro}"
          </p>
        </div>
      </div>

      <div style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
        <p style="color: #6b7280; font-size: 14px; margin: 0;">
          Generated by PodBrief - AI-Powered Podcast Brief Generator
        </p>
        <p style="color: #6b7280; font-size: 12px; margin: 5px 0 0 0;">
          Powered by OpenAI GPT-3.5-turbo
        </p>
      </div>
    `;
    
    document.body.appendChild(tempDiv);
    
    // Convert HTML to canvas
    const canvas = await html2canvas(tempDiv, {
      scale: 2,
      useCORS: true,
      allowTaint: true,
      backgroundColor: '#ffffff',
      width: 800,
      height: tempDiv.scrollHeight
    });
    
    // Remove the temporary div
    document.body.removeChild(tempDiv);
    
    // Create PDF
    const imgData = canvas.toDataURL('image/png');
    const pdf = new jsPDF('p', 'mm', 'a4');
    
    const pdfWidth = pdf.internal.pageSize.getWidth();
    const pdfHeight = pdf.internal.pageSize.getHeight();
    const imgWidth = pdfWidth - 20; // 10mm margin on each side
    const imgHeight = (canvas.height * imgWidth) / canvas.width;
    
    let heightLeft = imgHeight;
    let position = 10; // 10mm top margin
    
    // Add first page
    pdf.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);
    heightLeft -= (pdfHeight - 20);
    
    // Add additional pages if needed
    while (heightLeft >= 0) {
      position = heightLeft - imgHeight + 10;
      pdf.addPage();
      pdf.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);
      heightLeft -= (pdfHeight - 20);
    }
    
    // Generate filename
    const guestName = brief.guestName.replace(/[^a-zA-Z0-9\s]/g, '').replace(/\s+/g, '-').toLowerCase();
    const filename = `podbrief-${guestName}.pdf`;
    
    // Download the PDF
    pdf.save(filename);
    
    return { success: true, filename };
  } catch (error) {
    console.error('Error generating PDF:', error);
    throw new Error('Failed to generate PDF');
  }
}; 